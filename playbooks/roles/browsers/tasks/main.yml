# Install browsers required to run the JavaScript
# and acceptance test suite locally without a display
---
- name: lock Firefox version
  copy:
    dest: /etc/apt/preferences.d/firefox-pinned-version
    content: |
      Package: firefox
      Pin: {{ firefox_version }}
      Pin-Priority: 1001
  tags:
    - install
    - install:system-requirements

- name: install system packages
  apt:
    pkg: "{{ ','.join(browser_deb_pkgs) }}"
    update_cache: yes
  tags:
    - install
    - install:system-requirements

- name: download browser debian packages from S3
  get_url: dest="/tmp/{{ item.name }}" url="{{ item.url }}"
  register: download_deb
  with_items: "{{ browser_s3_deb_pkgs }}"
  tags:
    - install
    - install:system-requirements

- name: install browser debian packages
  shell: gdebi -nq /tmp/{{ item.name }}
  when: download_deb.changed
  with_items: "{{ browser_s3_deb_pkgs }}"
  tags:
    - install
    - install:system-requirements

# Because the source location has been deprecated, we need to
# ensure it does not interfere with subsequent apt commands
- name: remove google chrome debian source list
  file:
    path: /etc/apt/sources.list.d/google-chrome.list
    state: absent
  tags:
    - install
    - install:system-requirements

- name: download ChromeDriver
  get_url:
    url: "{{ chromedriver_url }}"
    dest: /var/tmp/chromedriver_{{ chromedriver_version }}.zip
  register: download_chromedriver
  tags:
    - install
    - install:system-requirements

- name: unzip ChromeDriver tarfile
  shell: unzip /var/tmp/chromedriver_{{ chromedriver_version }}.zip
  args:
    chdir: /var/tmp
  when: download_chromedriver.changed
  tags:
    - install
    - install:system-requirements

- name: move ChromeDriver binary to /usr/local
  shell: mv /var/tmp/chromedriver /usr/local/bin/chromedriver
  when: download_chromedriver.changed
  tags:
    - install
    - install:system-requirements

- name: make ChromeDriver binary executable
  file:
    path: /usr/local/bin/chromedriver
    mode: 0755
  when: download_chromedriver.changed
  tags:
    - install
    - install:system-requirements

- name: verify ChromeDriver location and mode
  stat:
    path: /usr/local/bin/chromedriver
  register: chromedriver
  tags:
    - install
    - install:system-requirements

- assert:
    that:
      - "chromedriver.stat.exists"
      - "chromedriver.stat.mode == '0755'"
  tags:
    - install
    - install:system-requirements

- name: download PhantomJS
  get_url:
    url: "{{ phantomjs_url }}"
    dest: "/var/tmp/{{ phantomjs_tarfile }}"
  register: download_phantom_js
  tags:
    - install
    - install:system-requirements

- name: unpack the PhantomJS tarfile
  shell: "tar -xjf /var/tmp/{{ phantomjs_tarfile }}"
  args:
    chdir: "/var/tmp"
  when: download_phantom_js.changed
  tags:
    - install
    - install:system-requirements

- name: move PhantomJS binary to /usr/local
  shell: mv /var/tmp/{{ phantomjs_version }}/bin/phantomjs /usr/local/bin/phantomjs
  when: download_phantom_js.changed
  tags:
    - install
    - install:system-requirements

- name: verify phantomjs location
  stat: path=/usr/local/bin/phantomjs
  register: phantomjs
  tags:
    - install
    - install:system-requirements

- assert:
    that: "phantomjs.stat.exists"
  tags:
    - install
    - install:system-requirements

- name: create xvfb upstart script for Precise and Trusty (12.04 and 14.04)
  template:
    src: xvfb.conf.j2
    dest: /etc/init/xvfb.conf
    owner: root
    group: root
  when: ansible_distribution_release in ['precise', 'trusty']
  tags:
    - install
    - install:configuration

- name: start xvfb upstart script for Precise and Trusty (12.04 and 14.04)
  shell: start xvfb
  ignore_errors: yes
  when: ansible_distribution_release in ['precise', 'trusty']
  tags:
    - install
    - install:configuration

- name: create xvfb systemd service for Xenial (16.04)
  template:
    src: xvfb.service.j2
    dest: /etc/systemd/system/xvfb.service
    owner: root
    group: root
  when: ansible_distribution_release == 'xenial'
  tags:
    - install
    - install:configuration

- name: enable and start xvfb systemd service for Xenial (16.04)
  systemd:
    name: xvfb
    enabled: yes
    state: started
  when: ansible_distribution_release == 'xenial'
  tags:
    - install
    - install:configuration
